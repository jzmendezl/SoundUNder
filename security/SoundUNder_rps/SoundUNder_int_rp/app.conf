upstream int_node {
  server ???:???;
}

server {
  listen 80;
  return 301 https://$host$request_uri;
  
}
server {
  listen 443 ssl;
  ssl_certificate     /etc/ssl/certs/34_27_78_242.crt;
  ssl_certificate_key /etc/ssl/private/34_27_78_242.key;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers         HIGH:!aNULL:!MD5; 

  proxy_buffers 64 16k;
  proxy_max_temp_file_size 1024m;
  proxy_connect_timeout 5s;
  proxy_send_timeout 10s;
  proxy_read_timeout 10s;

  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for node production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/ {
    try_files $uri @int_node;

    access_log off;
    gzip_static on; # to serve pre-gzipped version

    expires max;
    add_header Cache-Control public;

    # Some browsers still send conditional-GET requests if there's a
    # Last-Modified header or an ETag header even if they haven't
    # reached the expiry date sent in the Expires header.
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  location / {
    try_files $uri $uri/ @int_node;
  }

  location @int_node {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://int_node;
    access_log /etc/log/nginx.access.log;
    error_log /etc/log/nginx.error.log;
  }
}